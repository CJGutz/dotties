#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

fg_green=^c#00FF00^
fg_yellow=^c#FFFF00^
fg_red=^c#FF0000^
store_color=^v^
saved_color=^t^

case $BLOCK_BUTTON in
	3) killall -q notify-osd && notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust brightness." ;;
	4) brightnessctl s 5%+ ;;
	5) brightnessctl s 5%- ;;
	6) setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	case "$(cat "$battery/status" 2>&1)" in
		"Full") status="⚡" ;;
		"Discharging") status="🔋" ;;
		"Charging") status="🔌" ;;
		"Not charging") status="🛑" ;;
		"Unknown") status="♻️" ;;
		*) exit 1 ;;
	esac
	capacity="$(cat "$battery/capacity" 2>&1)"

	# Change icon depending on capacity
	if [ "$status" = "🔋" ]; then
		if [ "$capacity" -le 25 ]; then 
			bat_color=$fg_red
			warn="❗"
		elif [ "$capacity" -le 50 ]; then
			bat_color=$fg_yellow
		else
			bat_color=$fg_green
		fi
	elif [ "$status" = "🔌" ]; then
		bat_color=$fg_green
	fi
	# Prints the info
	printf "%s%s %d%%" "$store_color$bat_color$status$saved_color" "$warn" "$capacity"; unset warn
done && printf "\\n"
